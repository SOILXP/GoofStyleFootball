-- ModuleScript | decompile
-- FullName: ReplicatedStorage.Modules.RaycastHitboxV3.HitboxObject

-- Decompiler will be improved VERY SOON!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-09-10 13:25:53
-- Luau version 6, Types version 3
-- Time taken: 0.004099 seconds

local Parent = script.Parent
local module = {}
local tbl_upvr = {}
tbl_upvr.__index = tbl_upvr
function tbl_upvr.__tostring(arg1) -- Line 20
	return string.format("Hitbox for instance %s [%s]", arg1.object.Name, arg1.object.ClassName)
end
function module.new(arg1) -- Line 24
	--[[ Upvalues[1]:
		[1]: tbl_upvr (readonly)
	]]
	return setmetatable({}, tbl_upvr)
end
local Signal_upvr = require(Parent.Tools.Signal)
local CollectionService_upvr = game:GetService("CollectionService")
function tbl_upvr.config(arg1, arg2, arg3) -- Line 28
	--[[ Upvalues[2]:
		[1]: Signal_upvr (readonly)
		[2]: CollectionService_upvr (readonly)
	]]
	arg1.active = false
	arg1.deleted = false
	arg1.partMode = false
	arg1.debugMode = false
	arg1.points = {}
	arg1.targetsHit = {}
	arg1.OnHit = Signal_upvr:Create()
	arg1.OnUpdate = Signal_upvr:Create()
	arg1.raycastParams = RaycastParams.new()
	arg1.raycastParams.FilterType = Enum.RaycastFilterType.Include
	local var6 = arg3
	if not var6 then
		var6 = {}
	end
	arg1.raycastParams.FilterDescendantsInstances = var6
	arg1.object = arg2
	CollectionService_upvr:AddTag(arg1.object, "RaycastModuleManaged")
end
local CastVectorPoint_upvr = require(Parent.CastLogics.CastVectorPoint)
function tbl_upvr.SetPoints(arg1, arg2, arg3, arg4) -- Line 45
	--[[ Upvalues[1]:
		[1]: CastVectorPoint_upvr (readonly)
	]]
	if arg2 and (arg2:IsA("BasePart") or arg2:IsA("MeshPart")) then
		for _, v in ipairs(arg3) do
			if typeof(v) == "Vector3" then
				local tbl_2 = {}
				tbl_2.RelativePart = arg2
				tbl_2.Attachment = v
				tbl_2.LastPosition = nil
				tbl_2.group = arg4
				tbl_2.solver = CastVectorPoint_upvr
				table.insert(arg1.points, tbl_2)
			end
		end
	end
end
function tbl_upvr.RemovePoints(arg1, arg2, arg3) -- Line 62
	if arg2 and (arg2:IsA("BasePart") or arg2:IsA("MeshPart")) then
		for i_2 = 1, #arg1.points do
			local var17 = arg1.points[i_2]
			for _, v_2 in ipairs(arg3) do
				if typeof(var17.Attachment) == "Vector3" and var17.Attachment == v_2 and var17.RelativePart == arg2 then
					arg1.points[i_2] = nil
				end
			end
		end
	end
end
local CastLinkAttachment_upvr = require(Parent.CastLogics.CastLinkAttachment)
function tbl_upvr.LinkAttachments(arg1, arg2, arg3) -- Line 77
	--[[ Upvalues[1]:
		[1]: CastLinkAttachment_upvr (readonly)
	]]
	if arg2:IsA("Attachment") and arg3:IsA("Attachment") then
		local Group_2 = arg2:FindFirstChild("Group")
		local tbl = {
			RelativePart = nil;
		}
		tbl.Attachment = arg2
		tbl.Attachment0 = arg3
		tbl.LastPosition = nil
		local var24 = Group_2
		if var24 then
			var24 = Group_2.Value
		end
		tbl.group = var24
		tbl.solver = CastLinkAttachment_upvr
		table.insert(arg1.points, tbl)
	end
end
function tbl_upvr.UnlinkAttachments(arg1, arg2) -- Line 92
	for i_4, v_3 in ipairs(arg1.points) do
		if v_3.Attachment and v_3.Attachment == arg2 then
			table.remove(arg1.points, i_4)
			return
		end
	end
end
local CastAttachment_upvr = require(Parent.CastLogics.CastAttachment)
function tbl_upvr.seekAttachments(arg1, arg2, arg3) -- Line 101
	--[[ Upvalues[1]:
		[1]: CastAttachment_upvr (readonly)
	]]
	if #arg1.points <= 0 then
		table.insert(arg1.raycastParams.FilterDescendantsInstances, workspace.Terrain)
	end
	for i_5, v_4 in ipairs(arg1.object:GetDescendants()) do
		if v_4:IsA("Attachment") and v_4.Name == arg2 then
			local Group = v_4:FindFirstChild("Group")
			local tbl_3 = {
				Attachment = v_4;
				RelativePart = nil;
				LastPosition = nil;
			}
			local var40 = Group
			if var40 then
				var40 = Group.Value
			end
			tbl_3.group = var40
			tbl_3.solver = CastAttachment_upvr
			table.insert(arg1.points, tbl_3)
		end
	end
	if arg3 then
		if #arg1.points <= 0 then
			i_5 = arg2
			v_4 = arg1.object.Name
			warn(string.format("\n[[RAYCAST WARNING]]\nNo attachments with the name '%s' were found in %s. No raycasts will be drawn. Can be ignored if you are using SetPoints.", i_5, v_4))
			return
		end
		v_4 = arg1.object
		i_5 = v_4.Name
		v_4 = #arg1.points
		print(string.format("\n[[RAYCAST MESSAGE]]\n\nCreated Hitbox for %s - Attachments found: %s", i_5, v_4))
	end
end
function tbl_upvr.Destroy(arg1) -- Line 132
	if arg1.deleted then
	else
		if arg1.OnHit then
			arg1.OnHit:Delete()
		end
		if arg1.OnUpdate then
			arg1.OnUpdate:Delete()
		end
		arg1.points = nil
		arg1.active = false
		arg1.deleted = true
	end
end
function tbl_upvr.HitStart(arg1) -- Line 142
	arg1.active = true
end
function tbl_upvr.HitStop(arg1) -- Line 146
	if arg1.deleted then
	else
		arg1.active = false
		table.clear(arg1.targetsHit)
	end
end
function tbl_upvr.PartMode(arg1, arg2) -- Line 153
	arg1.partMode = arg2
end
function tbl_upvr.DebugMode(arg1, arg2) -- Line 157
	arg1.debugMode = arg2
end
return module