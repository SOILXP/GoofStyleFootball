-- LocalScript | decompile
-- FullName: Players.Isaac_Thunder2015.PlayerScripts.SunFlare

-- Decompiler will be improved VERY SOON!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-09-10 13:24:09
-- Luau version 6, Types version 3
-- Time taken: 0.002763 seconds

local tbl_upvr = {script.SunFlare, script.Bit0, script.Bit1, script.Bit2, script.Bit3, script.Bit4, script.Bit5}
local var2_upvw = 1
local var3_upvw = 0
local var5_upvw = 0
game["Run Service"].RenderStepped:Connect(function(arg1) -- Line 20
	--[[ Upvalues[4]:
		[1]: var3_upvw (read and write)
		[2]: tbl_upvr (readonly)
		[3]: var2_upvw (read and write)
		[4]: var5_upvw (read and write)
	]]
	local var8 = workspace.CurrentCamera.CFrame.Position + game.Lighting:GetSunDirection() * 500
	local any_WorldToViewportPoint_result1_2, any_WorldToViewportPoint_result2 = workspace.CurrentCamera:WorldToViewportPoint(var8)
	local var11 = Vector2.new(workspace.CurrentCamera.ViewportSize.x / 2, workspace.CurrentCamera.ViewportSize.Y / 2) - Vector2.new(any_WorldToViewportPoint_result1_2.x, any_WorldToViewportPoint_result1_2.y)
	local Unit = var11.Unit
	var3_upvw = math.deg(math.atan2(-var11.y, var11.x)) + 180
	local var13 = var11.Magnitude * 3 / #tbl_upvr
	for i = 1, #tbl_upvr do
		local var14 = i - 1
		local any_ViewportPointToRay_result1 = workspace.CurrentCamera:ViewportPointToRay(any_WorldToViewportPoint_result1_2.x + Unit.x * var14 * var13, any_WorldToViewportPoint_result1_2.y + Unit.y * var14 * var13, 1)
		tbl_upvr[i].Position = any_ViewportPointToRay_result1.Origin + any_ViewportPointToRay_result1.Direction.Unit * 10
	end
	local vector2 = Vector2.new(any_WorldToViewportPoint_result1_2.X / game.Workspace.CurrentCamera.ViewportSize.X, any_WorldToViewportPoint_result1_2.Y / game.Workspace.CurrentCamera.ViewportSize.Y)
	var2_upvw = 1
	if any_WorldToViewportPoint_result2 == false then
		var2_upvw = 0
	end
	if 0 < var2_upvw then
		if vector2.X < 0.1 then
			var2_upvw = math.min(var2_upvw, math.clamp(1 - (0.1 - vector2.X) / 0.1, 0, 1))
		end
		if 0.9 < vector2.X then
			var2_upvw = math.min(var2_upvw, math.clamp(1 - (vector2.X - 0.9) / 0.1, 0, 1))
		end
		if vector2.Y < 0.1 then
			var2_upvw = math.min(var2_upvw, math.clamp(1 - (0.1 - vector2.Y) / 0.1, 0, 1))
		end
		if 0.9 < vector2.Y then
			var2_upvw = math.min(var2_upvw, math.clamp(1 - (vector2.Y - 0.9) / 0.1, 0, 1))
		end
	end
	if 0 < var2_upvw then
		local RaycastParams_new_result1 = RaycastParams.new()
		RaycastParams_new_result1.RespectCanCollide = false
		if game.Workspace:Raycast(game.Workspace.CurrentCamera.CFrame.Position, (var8 - game.Workspace.CurrentCamera.CFrame.Position).Unit * 500, RaycastParams_new_result1) then
			var5_upvw -= arg1 * 10
		else
			var5_upvw += arg1 * 10
		end
		var5_upvw = math.clamp(var5_upvw, 0, 1)
		var2_upvw = math.min(var5_upvw, var2_upvw)
	end
end)
game["Run Service"]:BindToRenderStep("PreCamera", 5000, function() -- Line 104
	--[[ Upvalues[3]:
		[1]: tbl_upvr (readonly)
		[2]: var2_upvw (read and write)
		[3]: var3_upvw (read and write)
	]]
	if not game.Players.LocalPlayer.Settings.Misc.SunFlare.Value then
	else
		for _, var20 in tbl_upvr do
			var20.Parent = game.Workspace
			for _, var22 in var20:GetDescendants() do
				if var22:IsA("ParticleEmitter") then
					var22.Brightness = var2_upvw * 0.15
					var22.Rotation = NumberRange.new(var3_upvw)
					local any_WorldToViewportPoint_result1, _ = workspace.CurrentCamera:WorldToViewportPoint(var22.Parent.WorldPosition)
					var22.ZOffset = any_WorldToViewportPoint_result1.Z - 1
					var22.Enabled = false
					var22:Clear()
					var22:Emit(1)
				end
			end
		end
	end
end)