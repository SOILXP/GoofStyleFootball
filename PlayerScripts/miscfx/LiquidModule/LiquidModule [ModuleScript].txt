-- ModuleScript | decompile
-- FullName: Players.Isaac_Thunder2015.PlayerScripts.miscfx.LiquidModule

-- Decompiler will be improved VERY SOON!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-09-10 13:24:18
-- Luau version 6, Types version 3
-- Time taken: 0.001410 seconds

local module = {}
function handleWater(arg1) -- Line 3
	local any_Initialize_result1_upvr = require(game.ReplicatedStorage.Modules.RaycastHitboxV3):Initialize(arg1, {workspace.gameArea.Field})
	any_Initialize_result1_upvr:PartMode(true)
	any_Initialize_result1_upvr.OnHit:Connect(function(arg1_2, arg2, arg3) -- Line 8
		--[[ Upvalues[1]:
			[1]: arg1 (readonly)
		]]
		if arg1_2:IsDescendantOf(game.Workspace.FX) or arg1_2.Parent:FindFirstChildOfClass("Humanoid") or 0.5 < arg1_2.Transparency and arg1_2.Name ~= "CollisionBaseplate" then
		else
			if arg1_2.CanTouch == false or arg1_2.CanCollide == false then return end
			if arg1_2 then
				local clone_2 = game.ReplicatedStorage.VFX.RainDrop:Clone()
				clone_2.Parent = game.Workspace.FX
				clone_2.Position = arg3.Position
				clone_2.MIDDLE.BLOOD02:Emit(1)
				clone_2.MIDDLE["WATER SPRAY"]:Emit(math.random(5, 10))
				game.Debris:AddItem(clone_2, 4)
				game.Debris:AddItem(arg1, 0.05)
			end
		end
	end)
	any_Initialize_result1_upvr:HitStart()
	task.delay(5, function() -- Line 24
		--[[ Upvalues[1]:
			[1]: any_Initialize_result1_upvr (readonly)
		]]
		if any_Initialize_result1_upvr ~= nil and any_Initialize_result1_upvr.HitStop ~= nil then
			any_Initialize_result1_upvr:HitStop()
		end
	end)
end
function module.newWater(arg1, arg2) -- Line 31
	local clone = game.ReplicatedStorage.WaterDrop:Clone()
	clone.Position = arg1
	clone.Parent = workspace.FX
	clone.Anchored = true
	game.Debris:AddItem(clone, 15)
	game:GetService("TweenService"):Create(clone, TweenInfo.new(1, Enum.EasingStyle.Cubic, Enum.EasingDirection.InOut), {
		Position = arg1 + arg2.Unit * 90;
	}):Play()
	handleWater(clone)
	return clone
end
return module