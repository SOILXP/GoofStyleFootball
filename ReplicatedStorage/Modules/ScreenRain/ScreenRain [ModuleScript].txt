-- ModuleScript | decompile
-- FullName: ReplicatedStorage.Modules.ScreenRain

-- Decompiler will be improved VERY SOON!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/brNTY8nX8t)
-- Decompiled on 2025-09-10 13:25:55
-- Luau version 6, Types version 3
-- Time taken: 0.008920 seconds

local tbl_upvr_3 = {
	Rate = 8;
	Size = 0.09;
	Tint = Color3.fromRGB(226, 244, 255);
	Fade = 1.5;
	UpdateFreq = 0.022222222222222223;
}
local CurrentCamera_upvr = workspace.CurrentCamera
local UserSettings_result1_upvw = UserSettings()
local GameSettings_upvr = UserSettings_result1_upvw.GameSettings
local var6_upvw
if var6_upvw > GameSettings_upvr.SavedQualityLevel.Value then
	UserSettings_result1_upvw = false
else
	UserSettings_result1_upvw = true
end
GameSettings_upvr:GetPropertyChangedSignal("SavedQualityLevel"):Connect(function() -- Line 41
	--[[ Upvalues[2]:
		[1]: UserSettings_result1_upvw (read and write)
		[2]: GameSettings_upvr (readonly)
	]]
	local var8 = true
	if 8 > GameSettings_upvr.SavedQualityLevel.Value then
		if GameSettings_upvr.SavedQualityLevel.Value ~= 0 then
			var8 = false
		else
			var8 = true
		end
	end
	UserSettings_result1_upvw = var8
end)
var6_upvw = tbl_upvr_3.Rate
tbl_upvr_3.Rate = var6_upvw or 5
var6_upvw = tbl_upvr_3.Size
tbl_upvr_3.Size = var6_upvw or 1.5
local Tint = tbl_upvr_3.Tint
if not Tint then
	Tint = Color3.fromRGB
	var6_upvw = 226
	Tint = Tint(var6_upvw, 244, 255)
end
tbl_upvr_3.Tint = Tint
var6_upvw = tbl_upvr_3.Fade
tbl_upvr_3.Fade = var6_upvw or 1.5
var6_upvw = tbl_upvr_3.UpdateFreq
tbl_upvr_3.UpdateFreq = var6_upvw or 0.022222222222222223
local tbl_upvr = {}
var6_upvw = 0
local Character_upvr = game:GetService("Players").LocalPlayer.Character
if Character_upvr then
	local var15_upvr = var6_upvw + 1
	var6_upvw += 1
	tbl_upvr[var15_upvr] = Character_upvr
	local var17_upvw
	var17_upvw = Character_upvr.AncestryChanged:Connect(function() -- Line 62
		--[[ Upvalues[5]:
			[1]: Character_upvr (readonly)
			[2]: var17_upvw (read and write)
			[3]: tbl_upvr (readonly)
			[4]: var15_upvr (readonly)
			[5]: var6_upvw (read and write)
		]]
		if Character_upvr:IsDescendantOf(game) then
		else
			var17_upvw:Disconnect()
			tbl_upvr[var15_upvr] = tbl_upvr[var6_upvw]
			tbl_upvr[var6_upvw] = nil
			var6_upvw -= 1
		end
	end)
end
Character_upvr = game:GetService("Players").LocalPlayer.CharacterAdded:Connect
Character_upvr(function(arg1) -- Line 55, Named "addToIgnore"
	--[[ Upvalues[2]:
		[1]: var6_upvw (read and write)
		[2]: tbl_upvr (readonly)
	]]
	if arg1 then
		local var11_upvr = var6_upvw + 1
		var6_upvw += 1
		tbl_upvr[var11_upvr] = arg1
		local var13_upvw
		var13_upvw = arg1.AncestryChanged:Connect(function() -- Line 62
			--[[ Upvalues[5]:
				[1]: arg1 (readonly)
				[2]: var13_upvw (read and write)
				[3]: tbl_upvr (copied, readonly)
				[4]: var11_upvr (readonly)
				[5]: var6_upvw (copied, read and write)
			]]
			if arg1:IsDescendantOf(game) then
			else
				var13_upvw:Disconnect()
				tbl_upvr[var11_upvr] = tbl_upvr[var6_upvw]
				tbl_upvr[var6_upvw] = nil
				var6_upvw -= 1
			end
		end)
	end
end)
Character_upvr = Instance.new
var15_upvr = "Folder"
Character_upvr = Character_upvr(var15_upvr)
local var18_upvr = Character_upvr
var15_upvr = "ScreenDroplets"
var18_upvr.Name = var15_upvr
var18_upvr.Parent = CurrentCamera_upvr
if var18_upvr then
	var15_upvr = var6_upvw + 1
	local var19_upvr = var15_upvr
	var6_upvw += 1
	tbl_upvr[var19_upvr] = var18_upvr
	local var21_upvw
	var21_upvw = var18_upvr.AncestryChanged:Connect(function() -- Line 62
		--[[ Upvalues[5]:
			[1]: var18_upvr (readonly)
			[2]: var21_upvw (read and write)
			[3]: tbl_upvr (readonly)
			[4]: var19_upvr (readonly)
			[5]: var6_upvw (read and write)
		]]
		if var18_upvr:IsDescendantOf(game) then
		else
			var21_upvw:Disconnect()
			tbl_upvr[var19_upvr] = tbl_upvr[var6_upvw]
			tbl_upvr[var6_upvw] = nil
			var6_upvw -= 1
		end
	end)
end
var19_upvr = {}
local var22_upvr = var19_upvr
local tbl_upvr_2 = {}
local CFrame_upvw = CurrentCamera_upvr.CFrame
local var26_upvw = tbl_upvr_3.Rate * tbl_upvr_3.Fade * 3
game:GetService("RunService"):BindToRenderStep("ScreenRainUpdate", Enum.RenderPriority.Camera.Value + 2, function() -- Line 91
	--[[ Upvalues[4]:
		[1]: CFrame_upvw (read and write)
		[2]: CurrentCamera_upvr (readonly)
		[3]: var26_upvw (read and write)
		[4]: tbl_upvr_2 (readonly)
	]]
	CFrame_upvw = CurrentCamera_upvr.CFrame
	local table_create_result1 = table.create(var26_upvw)
	local table_create_result1_2 = table.create(var26_upvw)
	local var33 = 0
	local var34 = math.tan(math.rad(CurrentCamera_upvr.FieldOfView * 0.5)) / 0.7002075382097097
	for i, v in pairs(tbl_upvr_2) do
		var33 += 1
		local Position_3 = v.Position
		table_create_result1_2[var33] = (CFrame_upvw) * (CFrame.new(Vector3.new(Position_3.X * var34, Position_3.Y * var34, Position_3.Z)) * (v - v.Position))
		table_create_result1[var33] = i
	end
	var26_upvw = var33
	workspace:BulkMoveTo(table_create_result1, table_create_result1_2, Enum.BulkMoveMode.FireCFrameChanged)
end)
local Part = Instance.new("Part")
Part.Name = "Droplet"
Part.Material = Enum.Material.Glass
Part.CastShadow = false
Part.CanCollide = false
Part.CanQuery = false
Part.CanTouch = false
Part.Anchored = true
Part.Transparency = 0.5
Part.Color = tbl_upvr_3.Tint
Part.Size = Vector3.new(1, 1, 1)
local SpecialMesh = Instance.new("SpecialMesh")
SpecialMesh.Name = "Mesh"
SpecialMesh.MeshType = Enum.MeshType.Sphere
SpecialMesh.Parent = Part
local any_new_result1_upvw = require(script.ObjectPool).new(Part, tbl_upvr_3.Rate * tbl_upvr_3.Fade * 3)
local function _(arg1) -- Line 136, Named "Cleanup"
	--[[ Upvalues[3]:
		[1]: var22_upvr (readonly)
		[2]: tbl_upvr_2 (readonly)
		[3]: any_new_result1_upvw (read and write)
	]]
	var22_upvr[arg1] = nil
	tbl_upvr_2[arg1] = nil
	any_new_result1_upvw:Return(arg1)
end
local function UnderObject_upvr(arg1, arg2) -- Line 143, Named "UnderObject"
	--[[ Upvalues[2]:
		[1]: tbl_upvr (readonly)
		[2]: UnderObject_upvr (readonly)
	]]
	local var42 = arg2 or 120
	local workspace_FindPartOnRayWithIgnoreList_result1_2, workspace_FindPartOnRayWithIgnoreList_result2_3 = workspace:FindPartOnRayWithIgnoreList(Ray.new(arg1, Vector3.new(0, 1, 0) * var42), tbl_upvr)
	if workspace_FindPartOnRayWithIgnoreList_result1_2 then
		if workspace_FindPartOnRayWithIgnoreList_result1_2.Transparency ~= 1 then
			return true
		end
		return UnderObject_upvr(workspace_FindPartOnRayWithIgnoreList_result2_3 + Vector3.new(0, 1, 0), var42 - (arg1 - workspace_FindPartOnRayWithIgnoreList_result2_3).Magnitude)
	end
	return false
end
local function CreateDroplet_upvr() -- Line 155, Named "CreateDroplet"
	--[[ Upvalues[5]:
		[1]: tbl_upvr_3 (readonly)
		[2]: any_new_result1_upvw (read and write)
		[3]: tbl_upvr_2 (readonly)
		[4]: var22_upvr (readonly)
		[5]: var18_upvr (readonly)
	]]
	local var47 = tbl_upvr_3.Size + math.random(tbl_upvr_3.Size / 3 * -10, tbl_upvr_3.Size / 3 * 10) / 10
	local any_Get_result1 = any_new_result1_upvw:Get()
	any_Get_result1.Mesh.Scale = Vector3.new(var47, var47, var47)
	any_Get_result1.Mesh.Offset = Vector3.new(0, 0, 0)
	any_Get_result1.Color = tbl_upvr_3.Tint
	any_Get_result1.Transparency = 0.7
	local cframe = CFrame.new(math.random(-120, 120) / 100, math.random(-100, 100) / 100, -1)
	tbl_upvr_2[any_Get_result1] = cframe
	var22_upvr[any_Get_result1] = {
		startClock = os.clock();
		scale = var47;
		stretch = math.random(5, 10) / 10 * var47;
		mesh = any_Get_result1.Mesh;
	}
	any_Get_result1.Parent = var18_upvr
	for _ = 1, math.random(4) do
		local var51 = var47 / 1.5 + math.random(var47 / 3 * -100, var47 / 3 * 100) / 100
		local any_Get_result1_2 = any_new_result1_upvw:Get()
		any_Get_result1_2.Mesh.Scale = Vector3.new(var51, var51, var51)
		any_Get_result1_2.Mesh.Offset = Vector3.new(0, 0, 0)
		any_Get_result1_2.Color = tbl_upvr_3.Tint
		any_Get_result1_2.Transparency = 0.7
		local var53 = var51 * 60
		tbl_upvr_2[any_Get_result1_2] = cframe * CFrame.new(math.random(-var53, var53) / 100, math.random(-var53, var53) / 100, 0)
		var22_upvr[any_Get_result1_2] = {
			startClock = os.clock();
			scale = var51;
			stretch = math.random(5, 10) / 10 * var51;
			mesh = any_Get_result1_2.Mesh;
		}
		any_Get_result1_2.Parent = var18_upvr
	end
end
return {
	Enabled = false;
	_activeUpdater = false;
	Enable = function(arg1, arg2) -- Line 206, Named "Enable"
		--[[ Upvalues[9]:
			[1]: tbl_upvr_3 (readonly)
			[2]: var22_upvr (readonly)
			[3]: tbl_upvr_2 (readonly)
			[4]: any_new_result1_upvw (read and write)
			[5]: UserSettings_result1_upvw (read and write)
			[6]: CFrame_upvw (read and write)
			[7]: tbl_upvr (readonly)
			[8]: UnderObject_upvr (readonly)
			[9]: CreateDroplet_upvr (readonly)
		]]
		arg1.Enabled = true
		arg1:Configure(arg2)
		if arg1._activeUpdater then
		else
			arg1._activeUpdater = true
			local var57_upvw = 0
			task.defer(function() -- Line 217
				--[[ Upvalues[11]:
					[1]: tbl_upvr_3 (copied, readonly)
					[2]: arg1 (readonly)
					[3]: var22_upvr (copied, readonly)
					[4]: tbl_upvr_2 (copied, readonly)
					[5]: any_new_result1_upvw (copied, read and write)
					[6]: UserSettings_result1_upvw (copied, read and write)
					[7]: CFrame_upvw (copied, read and write)
					[8]: tbl_upvr (copied, readonly)
					[9]: UnderObject_upvr (copied, readonly)
					[10]: var57_upvw (read and write)
					[11]: CreateDroplet_upvr (copied, readonly)
				]]
				print("spawned updater")
				if not task.wait(tbl_upvr_3.UpdateFreq) then
					-- KONSTANTWARNING: GOTO [204] #161
				end
				if not arg1.Enabled and not next(var22_upvr) then
					arg1._activeUpdater = false
					print("closed updater")
					return
				end
				debug.profilebegin("ScreenRainUpdate")
				debug.profilebegin("Animations")
				for i_4, v_3 in pairs(var22_upvr) do
					local var87 = os.clock() - v_3.startClock
					if tbl_upvr_3.Fade <= var87 then
						var22_upvr[i_4] = nil
						tbl_upvr_2[i_4] = nil
						any_new_result1_upvw:Return(i_4)
					else
						local mesh = v_3.mesh
						local scale = v_3.scale
						local var90 = var87 / tbl_upvr_3.Fade
						local var91 = scale + (v_3.stretch) * (var90 * var90 * var90 * var90)
						i_4.Transparency = 0.7 + (0.3) * (var90 * var90)
						mesh.Scale = Vector3.new(scale, var91, scale)
						mesh.Offset = Vector3.new(0, var91 / -2, 0)
					end
				end
				debug.profileend()
				debug.profilebegin("Droplet Creation")
				if arg1.Enabled and UserSettings_result1_upvw then
					local Y_2 = CFrame_upvw.LookVector.Y
					if -0.4 < Y_2 then
						local Position_2 = CFrame_upvw.Position
						local var94 = nil or 120
						i_4 = workspace:FindPartOnRayWithIgnoreList(Ray.new(Position_2, Vector3.new(0, 1, 0) * var94), tbl_upvr)
						local workspace_FindPartOnRayWithIgnoreList_result1, workspace_FindPartOnRayWithIgnoreList_result2_2 = workspace:FindPartOnRayWithIgnoreList(Ray.new(Position_2, Vector3.new(0, 1, 0) * var94), tbl_upvr)
						if workspace_FindPartOnRayWithIgnoreList_result1 then
							if workspace_FindPartOnRayWithIgnoreList_result1.Transparency ~= 1 then
								Y_2 = true
							else
								Y_2 = UnderObject_upvr(workspace_FindPartOnRayWithIgnoreList_result2_2 + Vector3.new(0, 1, 0), var94 - (Position_2 - workspace_FindPartOnRayWithIgnoreList_result2_2).Magnitude)
							end
						else
							Y_2 = false
						end
						if not Y_2 then
							Y_2 = var57_upvw
							-- KONSTANTERROR: Expression was reused, decompilation is incorrect
							workspace_FindPartOnRayWithIgnoreList_result2_2 = tbl_upvr_3
							workspace_FindPartOnRayWithIgnoreList_result1 = workspace_FindPartOnRayWithIgnoreList_result2_2.Rate
							Y_2 += (os.clock() - os.clock()) * workspace_FindPartOnRayWithIgnoreList_result1
							var57_upvw = Y_2
							workspace_FindPartOnRayWithIgnoreList_result2_2 = var57_upvw
							workspace_FindPartOnRayWithIgnoreList_result1 = math.floor(workspace_FindPartOnRayWithIgnoreList_result2_2)
							Y_2 = workspace_FindPartOnRayWithIgnoreList_result1
							for _ = 1, Y_2 do
								workspace_FindPartOnRayWithIgnoreList_result1 = CreateDroplet_upvr
								workspace_FindPartOnRayWithIgnoreList_result1()
							end
							Y_2 = var57_upvw
							Y_2 %= 1
							var57_upvw = Y_2
						else
							var57_upvw %= 1
						end
						debug.profileend()
						debug.profileend()
						-- KONSTANTWARNING: GOTO [7] #6
					end
					-- KONSTANTWARNING: GOTO [193] #152
				end
			end)
		end
	end;
	Disable = function(arg1) -- Line 272, Named "Disable"
		arg1.Enabled = false
	end;
	Configure = function(arg1, arg2) -- Line 276, Named "Configure"
		--[[ Upvalues[1]:
			[1]: tbl_upvr_3 (readonly)
		]]
		if type(arg2) == "table" then
			for i_3, v_2 in pairs(arg2) do
				print(i_3, v_2)
				tbl_upvr_3[i_3] = v_2
			end
		end
	end;
}